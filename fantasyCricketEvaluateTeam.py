# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'fantasy-cricket-evaluateTeam.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_EVALUATE(object):
        
        def setupUi(self, EVALUATE):
                import sqlite3
                db = sqlite3.connect("fanatasy-cricket.db")
                EVALUATE.setObjectName("EVALUATE")
                EVALUATE.resize(500, 400)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                EVALUATE.setFont(font)
                EVALUATE.setStyleSheet("background-color: rgb(198, 255, 249);\n"
                "font: 12pt \"Comic Sans MS\";")
                self.verticalLayout = QtWidgets.QVBoxLayout(EVALUATE)
                self.verticalLayout.setContentsMargins(25, -1, 25, -1)
                self.verticalLayout.setObjectName("verticalLayout")
                self.horizontalLayout = QtWidgets.QHBoxLayout()
                self.horizontalLayout.setObjectName("horizontalLayout")
                self.choos_team = QtWidgets.QLabel(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.choos_team.setFont(font)
                self.choos_team.setStyleSheet("color: rgb(255, 255, 255);\n"
                "background-color: rgb(0, 85, 124);")
                self.choos_team.setAlignment(QtCore.Qt.AlignCenter)
                self.choos_team.setObjectName("choos_team")
                self.horizontalLayout.addWidget(self.choos_team)
                self.teamcb = QtWidgets.QComboBox(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.teamcb.setFont(font)
                self.teamcb.setStyleSheet("background-color: rgb(255, 255, 255);")
                self.teamcb.setObjectName("teamcb")
                self.horizontalLayout.addWidget(self.teamcb)
                #adding team names to the Team Combo Box widget
                sql = "SELECT name from teams"
                record = db.execute(sql)
                teams = []
                for row in record:
                        teams.append(row[0])
                        self.teamcb.addItem(row[0])
                self.choose_match = QtWidgets.QLabel(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.choose_match.setFont(font)
                self.choose_match.setStyleSheet("color: rgb(255, 255, 255);\n"
                "background-color: rgb(0, 85, 124);")
                self.choose_match.setAlignment(QtCore.Qt.AlignCenter)
                self.choose_match.setObjectName("choose_match")
                self.horizontalLayout.addWidget(self.choose_match)
                self.matchcb = QtWidgets.QComboBox(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.matchcb.setFont(font)
                self.matchcb.setStyleSheet("background-color: rgb(255, 255, 255);")
                self.matchcb.setObjectName("matchcb")
                self.matchcb.addItem("")
                self.matchcb.addItem("")
                self.matchcb.addItem("")
                self.horizontalLayout.addWidget(self.matchcb)
                self.verticalLayout.addLayout(self.horizontalLayout)
                self.line = QtWidgets.QFrame(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.line.setFont(font)
                self.line.setFrameShape(QtWidgets.QFrame.HLine)
                self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.line.setObjectName("line")
                self.verticalLayout.addWidget(self.line)
                self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_4.setObjectName("horizontalLayout_4")
                self.players = QtWidgets.QLabel(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.players.setFont(font)
                self.players.setStyleSheet("color: rgb(255, 255, 255);\n"
                "background-color: rgb(0, 85, 124);")
                self.players.setAlignment(QtCore.Qt.AlignCenter)
                self.players.setObjectName("players")
                self.horizontalLayout_4.addWidget(self.players)
                self.score = QtWidgets.QLabel(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.score.setFont(font)
                self.score.setStyleSheet("color: rgb(255, 255, 255);\n"
                "background-color: rgb(0, 85, 124);")
                self.score.setAlignment(QtCore.Qt.AlignCenter)
                self.score.setObjectName("score")
                self.horizontalLayout_4.addWidget(self.score)
                self.verticalLayout.addLayout(self.horizontalLayout_4)
                self.line_2 = QtWidgets.QFrame(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.line_2.setFont(font)
                self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
                self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.line_2.setObjectName("line_2")
                self.verticalLayout.addWidget(self.line_2)
                self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_2.setObjectName("horizontalLayout_2")
                self.playerlist = QtWidgets.QListWidget(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.playerlist.setFont(font)
                self.playerlist.setStyleSheet("background-color: rgb(255, 255, 255);")
                self.playerlist.setObjectName("playerlist")
                self.horizontalLayout_2.addWidget(self.playerlist)
                spacerItem = QtWidgets.QSpacerItem(200, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
                self.horizontalLayout_2.addItem(spacerItem)
                self.scorelist = QtWidgets.QListWidget(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.scorelist.setFont(font)
                self.scorelist.setStyleSheet("background-color: rgb(255, 255, 255);")
                self.scorelist.setObjectName("scorelist")
                self.horizontalLayout_2.addWidget(self.scorelist)
                self.verticalLayout.addLayout(self.horizontalLayout_2)
                self.line_3 = QtWidgets.QFrame(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.line_3.setFont(font)
                self.line_3.setFrameShape(QtWidgets.QFrame.HLine)
                self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
                self.line_3.setObjectName("line_3")
                self.verticalLayout.addWidget(self.line_3)
                self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
                self.horizontalLayout_3.setObjectName("horizontalLayout_3")
                self.calculatebtn = QtWidgets.QPushButton(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.calculatebtn.setFont(font)
                self.calculatebtn.setStyleSheet("color: rgb(255, 255, 255);\n"
                "background-color: rgb(0, 85, 124);\n"
                "")
                self.calculatebtn.setObjectName("calculatebtn")
                self.horizontalLayout_3.addWidget(self.calculatebtn)
                self.calculatebtn.clicked.connect(self.evaluatePoints)
                spacerItem1 = QtWidgets.QSpacerItem(150, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
                self.horizontalLayout_3.addItem(spacerItem1)
                self.scorelabel = QtWidgets.QLabel(EVALUATE)
                font = QtGui.QFont()
                font.setFamily("Comic Sans MS")
                font.setPointSize(12)
                font.setBold(False)
                font.setItalic(False)
                font.setWeight(50)
                self.scorelabel.setFont(font)
                self.scorelabel.setStyleSheet("color: rgb(255, 255, 255);\n"
                "background-color: rgb(0, 85, 124);")
                self.scorelabel.setAlignment(QtCore.Qt.AlignCenter)
                self.scorelabel.setObjectName("scorelabel")
                self.horizontalLayout_3.addWidget(self.scorelabel)
                self.verticalLayout.addLayout(self.horizontalLayout_3)
                self.totalPoints = 0
                self.retranslateUi(EVALUATE)
                QtCore.QMetaObject.connectSlotsByName(EVALUATE)

        def retranslateUi(self, EVALUATE):
                _translate = QtCore.QCoreApplication.translate
                EVALUATE.setWindowTitle(_translate("EVALUATE", "Evalute-Team"))
                self.choos_team.setText(_translate("EVALUATE", "Choose Team"))
                self.choose_match.setText(_translate("EVALUATE", "Choose Match"))
                self.matchcb.setItemText(0, _translate("EVALUATE", "match1"))
                self.matchcb.setItemText(1, _translate("EVALUATE", "match2"))
                self.matchcb.setItemText(2, _translate("EVALUATE", "match3"))
                self.players.setText(_translate("EVALUATE", "Players"))
                self.score.setText(_translate("EVALUATE", "Score"))
                self.calculatebtn.setText(_translate("EVALUATE", " Calculate Score"))
                self.scorelabel.setText(_translate("EVALUATE", "00"))

        def evaluatePoints(self):
                "Evaluates points of the players in the match"
                #importing the modules and packages necessary for evaluation of points
                import sqlite3, points
                #points is a modules which returns the calculated points 
                #calculations are based on the criteria of the app for each player
                db = sqlite3.connect("fanatasy-cricket.db")
                cursordb = db.cursor()
                self.totalPoints=0
                team = self.teamcb.currentText()
                self.playerlist.clear()
                sql = "SELECT players,value FROM teams WHERE name='"+team+"';"
                cursordb.execute(sql)
                record = cursordb.fetchone()
                players = record[0].split(',')
                self.playerlist.addItems(players)
                self.scorelist.clear()
                match = self.matchcb.currentText()
                #calcuting points for each player and total points for the team 
                #Points depends on the match chosen match1/match2/match3
                for i in range(self.playerlist.count()):
                        nm = self.playerlist.item(i).text()
                        cursordb.execute("SELECT * from "+match+" where player='"+nm+"';")
                        record = cursordb.fetchone()
                        pointsCalc = points.bat(record)
                        pointsCalc += points.bowl(record)
                        self.scorelist.addItem(str(pointsCalc))
                        self.totalPoints += pointsCalc
                self.scorelabel.setText(str(self.totalPoints))

if __name__ == "__main__":
    import sys,sqlite3,points
    db = sqlite3.connect("fanatasy-cricket.db")
    cursordb = db.cursor()
    app = QtWidgets.QApplication(sys.argv)
    EVALUATE = QtWidgets.QDialog()
    ui = Ui_EVALUATE()
    ui.setupUi(EVALUATE)
    EVALUATE.show()
    sys.exit(app.exec_())
    db.close()
